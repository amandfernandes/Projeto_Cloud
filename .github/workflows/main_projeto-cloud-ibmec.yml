name: Build and deploy JAR app to Azure Web App - projeto-cloud-ibmec

on:
  push:
    branches:
      - main
      - feature/*
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java version
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Install Docker Compose
        run: |
          DOCKER_COMPOSE_VERSION=2.20.2
          sudo curl -L "https://github.com/docker/compose/releases/download/v$DOCKER_COMPOSE_VERSION/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Find and verify JAR file
        id: find-jar
        run: |
          echo "Checking target directory:"
          ls -la target/
          JAR_FILE=$(find ./target -name "*.jar" -type f | grep -v original | head -n 1)
          if [ -n "$JAR_FILE" ]; then
            echo "Found JAR file: $JAR_FILE"
            echo "JAR file size: $(stat -c%s "$JAR_FILE") bytes"
            echo "jar-file=$JAR_FILE" >> $GITHUB_OUTPUT
          else
            echo "ERROR: No JAR file found!"
            exit 1
          fi

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: java-app
          path: ${{ steps.find-jar.outputs.jar-file }}

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ibmecdocker.azurecr.io
          username: ibmecdocker
          password: 8tSjvzZ5kXWWYW6+U+y6S0Xv9yI8yAnvy59C8JosPo+ACRAR+b4D

      - name: Build and push Docker image
        run: |
          # Build the Docker image
          docker build -t projeto_cloud-app:latest .
          
          # Tag for Azure Container Registry
          docker tag projeto_cloud-app ibmecdocker.azurecr.io/projeto_cloud-app:latest
          
          # Push to Azure Container Registry
          docker push ibmecdocker.azurecr.io/projeto_cloud-app:latest

          echo "Docker image pushed successfully!"